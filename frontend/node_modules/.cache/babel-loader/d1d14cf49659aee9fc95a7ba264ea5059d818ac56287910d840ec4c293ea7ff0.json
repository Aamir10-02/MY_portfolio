{"ast":null,"code":"var _jsxFileName = \"D:\\\\my-portfolio\\\\frontend\\\\src\\\\components\\\\Form.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import \"./FormStyles.css\";\n\n// const Form = () => {\n//   const [formData, setFormData] = useState({\n//     name: '',\n//     email: '',\n//     subject: '',\n//     message: ''\n//   });\n\n//   const [errors, setErrors] = useState({});\n//   const [submitted, setSubmitted] = useState(false);\n//   const [showPopup, setShowPopup] = useState(false);\n\n//   const validate = () => {\n//     let errors = {};\n//     let valid = true;\n\n//     if (!formData.name) {\n//       errors.name = 'Name is required';\n//       valid = false;\n//     }\n//     if (!formData.email) {\n//       errors.email = 'Email is required';\n//       valid = false;\n//     } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n//       errors.email = 'Email address is invalid';\n//       valid = false;\n//     }\n//     if (!formData.subject) {\n//       errors.subject = 'Subject is required';\n//       valid = false;\n//     }\n//     if (!formData.message) {\n//       errors.message = 'Message is required';\n//       valid = false;\n//     }\n\n//     setErrors(errors);\n//     return valid;\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (validate()) {\n//       try {\n//         const response = await axios.post('http://127.0.0.1:8000/form', formData);\n//         console.log(response.data);\n//         setSubmitted(true);\n//         setFormData({\n//           name: '',\n//           email: '',\n//           subject: '',\n//           message: ''\n//         });\n//         setErrors({});\n//         setShowPopup(true);\n//         setTimeout(() => setShowPopup(false), 3000); // Hide popup after 3 seconds\n//       } catch (error) {\n//         console.error(\"There was an error submitting the form!\", error);\n//       }\n//     }\n//   };\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData(prevState => ({\n//       ...prevState,\n//       [name]: value\n//     }));\n//   };\n\n//   return (\n//     <div className=\"form\">\n//       <form onSubmit={handleSubmit}>\n//         <label>Your Name</label>\n//         <input \n//           type=\"text\" \n//           name=\"name\" \n//           value={formData.name} \n//           onChange={handleChange} \n//         />\n//         {errors.name && <p className=\"error\">{errors.name}</p>}\n\n//         <label>Email</label>\n//         <input \n//           type=\"email\" \n//           name=\"email\" \n//           value={formData.email} \n//           onChange={handleChange} \n//         />\n//         {errors.email && <p className=\"error\">{errors.email}</p>}\n\n//         <label>Subject</label>\n//         <input \n//           type=\"text\" \n//           name=\"subject\" \n//           value={formData.subject} \n//           onChange={handleChange} \n//         />\n//         {errors.subject && <p className=\"error\">{errors.subject}</p>}\n\n//         <label>Message</label>\n//         <textarea \n//           rows=\"6\" \n//           placeholder=\"Type your message here\" \n//           name=\"message\" \n//           value={formData.message} \n//           onChange={handleChange} \n//         />\n//         {errors.message && <p className=\"error\">{errors.message}</p>}\n\n//         <button className=\"btn\" type=\"submit\">Submit</button>\n//       </form>\n\n//       {showPopup && <div className=\"popup\">Form submitted successfully!</div>}\n//     </div>\n//   );\n// }\n\n// export default Form;\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport emailjs from 'emailjs-com';\nimport './FormStyles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    subject: '',\n    message: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [showPopup, setShowPopup] = useState(false);\n\n  // Validation function\n  const validate = () => {\n    let errors = {};\n    let valid = true;\n    if (!formData.name) {\n      errors.name = 'Name is required';\n      valid = false;\n    }\n    if (!formData.email) {\n      errors.email = 'Email is required';\n      valid = false;\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n      errors.email = 'Email address is invalid';\n      valid = false;\n    }\n    if (!formData.subject) {\n      errors.subject = 'Subject is required';\n      valid = false;\n    }\n    if (!formData.message) {\n      errors.message = 'Message is required';\n      valid = false;\n    }\n    setErrors(errors);\n    return valid;\n  };\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (validate()) {\n      try {\n        // Post data to Django backend\n        const response = await axios.post('http://127.0.0.1:8000/form', formData);\n        console.log('Form submission response:', response.data);\n\n        // Prepare email parameters\n        const templateParams = {\n          from_name: formData.name,\n          to_name: 'recipient@example.com',\n          // Replace with the recipient's email or name\n          subject: formData.subject,\n          message: formData.message\n        };\n\n        // Send email using EmailJS\n        emailjs.send('your_service_id', 'your_template_id', templateParams, 'your_user_id').then(emailResponse => {\n          console.log('Email sent successfully', emailResponse.status, emailResponse.text);\n          alert('Your message has been sent and stored successfully!');\n          setFormData({\n            name: '',\n            email: '',\n            subject: '',\n            message: ''\n          });\n          setErrors({});\n          setShowPopup(true);\n          setTimeout(() => setShowPopup(false), 3000); // Hide popup after 3 seconds\n        }, err => {\n          console.error('Failed to send email', err);\n          alert('Your message was stored but the email could not be sent.');\n        });\n      } catch (error) {\n        console.error('There was an error submitting the form!', error);\n        alert('There was an error storing your message.');\n      }\n    }\n  };\n\n  // Handle input changes\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: formData.name,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), errors.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: errors.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        value: formData.email,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Subject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"subject\",\n        value: formData.subject,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), errors.subject && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: errors.subject\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"6\",\n        placeholder: \"Type your message here\",\n        name: \"message\",\n        value: formData.message,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), errors.message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: errors.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), showPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: \"Form submitted successfully!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"rVL++MEfOPnkW7O9WbsMit+m3k0=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","axios","emailjs","jsxDEV","_jsxDEV","Form","_s","formData","setFormData","name","email","subject","message","errors","setErrors","showPopup","setShowPopup","validate","valid","test","handleSubmit","e","preventDefault","response","post","console","log","data","templateParams","from_name","to_name","send","then","emailResponse","status","text","alert","setTimeout","err","error","handleChange","value","target","prevState","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","rows","placeholder","_c","$RefreshReg$"],"sources":["D:/my-portfolio/frontend/src/components/Form.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n// import \"./FormStyles.css\";\r\n\r\n// const Form = () => {\r\n//   const [formData, setFormData] = useState({\r\n//     name: '',\r\n//     email: '',\r\n//     subject: '',\r\n//     message: ''\r\n//   });\r\n\r\n//   const [errors, setErrors] = useState({});\r\n//   const [submitted, setSubmitted] = useState(false);\r\n//   const [showPopup, setShowPopup] = useState(false);\r\n\r\n//   const validate = () => {\r\n//     let errors = {};\r\n//     let valid = true;\r\n\r\n//     if (!formData.name) {\r\n//       errors.name = 'Name is required';\r\n//       valid = false;\r\n//     }\r\n//     if (!formData.email) {\r\n//       errors.email = 'Email is required';\r\n//       valid = false;\r\n//     } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n//       errors.email = 'Email address is invalid';\r\n//       valid = false;\r\n//     }\r\n//     if (!formData.subject) {\r\n//       errors.subject = 'Subject is required';\r\n//       valid = false;\r\n//     }\r\n//     if (!formData.message) {\r\n//       errors.message = 'Message is required';\r\n//       valid = false;\r\n//     }\r\n\r\n//     setErrors(errors);\r\n//     return valid;\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     if (validate()) {\r\n//       try {\r\n//         const response = await axios.post('http://127.0.0.1:8000/form', formData);\r\n//         console.log(response.data);\r\n//         setSubmitted(true);\r\n//         setFormData({\r\n//           name: '',\r\n//           email: '',\r\n//           subject: '',\r\n//           message: ''\r\n//         });\r\n//         setErrors({});\r\n//         setShowPopup(true);\r\n//         setTimeout(() => setShowPopup(false), 3000); // Hide popup after 3 seconds\r\n//       } catch (error) {\r\n//         console.error(\"There was an error submitting the form!\", error);\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   const handleChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setFormData(prevState => ({\r\n//       ...prevState,\r\n//       [name]: value\r\n//     }));\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"form\">\r\n//       <form onSubmit={handleSubmit}>\r\n//         <label>Your Name</label>\r\n//         <input \r\n//           type=\"text\" \r\n//           name=\"name\" \r\n//           value={formData.name} \r\n//           onChange={handleChange} \r\n//         />\r\n//         {errors.name && <p className=\"error\">{errors.name}</p>}\r\n\r\n//         <label>Email</label>\r\n//         <input \r\n//           type=\"email\" \r\n//           name=\"email\" \r\n//           value={formData.email} \r\n//           onChange={handleChange} \r\n//         />\r\n//         {errors.email && <p className=\"error\">{errors.email}</p>}\r\n\r\n//         <label>Subject</label>\r\n//         <input \r\n//           type=\"text\" \r\n//           name=\"subject\" \r\n//           value={formData.subject} \r\n//           onChange={handleChange} \r\n//         />\r\n//         {errors.subject && <p className=\"error\">{errors.subject}</p>}\r\n\r\n//         <label>Message</label>\r\n//         <textarea \r\n//           rows=\"6\" \r\n//           placeholder=\"Type your message here\" \r\n//           name=\"message\" \r\n//           value={formData.message} \r\n//           onChange={handleChange} \r\n//         />\r\n//         {errors.message && <p className=\"error\">{errors.message}</p>}\r\n\r\n//         <button className=\"btn\" type=\"submit\">Submit</button>\r\n//       </form>\r\n\r\n//       {showPopup && <div className=\"popup\">Form submitted successfully!</div>}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Form;\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport emailjs from 'emailjs-com';\r\nimport './FormStyles.css';\r\n\r\nconst Form = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    subject: '',\r\n    message: ''\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [showPopup, setShowPopup] = useState(false);\r\n\r\n  // Validation function\r\n  const validate = () => {\r\n    let errors = {};\r\n    let valid = true;\r\n\r\n    if (!formData.name) {\r\n      errors.name = 'Name is required';\r\n      valid = false;\r\n    }\r\n    if (!formData.email) {\r\n      errors.email = 'Email is required';\r\n      valid = false;\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n      errors.email = 'Email address is invalid';\r\n      valid = false;\r\n    }\r\n    if (!formData.subject) {\r\n      errors.subject = 'Subject is required';\r\n      valid = false;\r\n    }\r\n    if (!formData.message) {\r\n      errors.message = 'Message is required';\r\n      valid = false;\r\n    }\r\n\r\n    setErrors(errors);\r\n    return valid;\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (validate()) {\r\n      try {\r\n        // Post data to Django backend\r\n        const response = await axios.post('http://127.0.0.1:8000/form', formData);\r\n        console.log('Form submission response:', response.data);\r\n\r\n        // Prepare email parameters\r\n        const templateParams = {\r\n          from_name: formData.name,\r\n          to_name: 'recipient@example.com', // Replace with the recipient's email or name\r\n          subject: formData.subject,\r\n          message: formData.message\r\n        };\r\n\r\n        // Send email using EmailJS\r\n        emailjs\r\n          .send('your_service_id', 'your_template_id', templateParams, 'your_user_id')\r\n          .then(\r\n            (emailResponse) => {\r\n              console.log('Email sent successfully', emailResponse.status, emailResponse.text);\r\n              alert('Your message has been sent and stored successfully!');\r\n              setFormData({\r\n                name: '',\r\n                email: '',\r\n                subject: '',\r\n                message: ''\r\n              });\r\n              setErrors({});\r\n              setShowPopup(true);\r\n              setTimeout(() => setShowPopup(false), 3000); // Hide popup after 3 seconds\r\n            },\r\n            (err) => {\r\n              console.error('Failed to send email', err);\r\n              alert('Your message was stored but the email could not be sent.');\r\n            }\r\n          );\r\n      } catch (error) {\r\n        console.error('There was an error submitting the form!', error);\r\n        alert('There was an error storing your message.');\r\n      }\r\n    }\r\n  };\r\n\r\n  // Handle input changes\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prevState => ({\r\n      ...prevState,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <form onSubmit={handleSubmit}>\r\n        <label>Your Name</label>\r\n        <input \r\n          type=\"text\" \r\n          name=\"name\" \r\n          value={formData.name} \r\n          onChange={handleChange} \r\n        />\r\n        {errors.name && <p className=\"error\">{errors.name}</p>}\r\n\r\n        <label>Email</label>\r\n        <input \r\n          type=\"email\" \r\n          name=\"email\" \r\n          value={formData.email} \r\n          onChange={handleChange} \r\n        />\r\n        {errors.email && <p className=\"error\">{errors.email}</p>}\r\n\r\n        <label>Subject</label>\r\n        <input \r\n          type=\"text\" \r\n          name=\"subject\" \r\n          value={formData.subject} \r\n          onChange={handleChange} \r\n        />\r\n        {errors.subject && <p className=\"error\">{errors.subject}</p>}\r\n\r\n        <label>Message</label>\r\n        <textarea \r\n          rows=\"6\" \r\n          placeholder=\"Type your message here\" \r\n          name=\"message\" \r\n          value={formData.message} \r\n          onChange={handleChange} \r\n        />\r\n        {errors.message && <p className=\"error\">{errors.message}</p>}\r\n\r\n        <button className=\"btn\" type=\"submit\">Submit</button>\r\n      </form>\r\n\r\n      {showPopup && <div className=\"popup\">Form submitted successfully!</div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}