{"ast":null,"code":"import{useState,useEffect,useRef}from'react';const useIntersectionObserver=options=>{const[isIntersecting,setIntersecting]=useState(false);const ref=useRef(null);useEffect(()=>{const observer=new IntersectionObserver(_ref=>{let[entry]=_ref;setIntersecting(entry.isIntersecting);},options);const currentRef=ref.current;if(currentRef){observer.observe(currentRef);}return()=>{if(currentRef){observer.unobserve(currentRef);}};},[options]);return[ref,isIntersecting];};export default useIntersectionObserver;","map":{"version":3,"names":["useState","useEffect","useRef","useIntersectionObserver","options","isIntersecting","setIntersecting","ref","observer","IntersectionObserver","_ref","entry","currentRef","current","observe","unobserve"],"sources":["D:/my-portfolio/frontend/src/hooks/useIntersectionObserver.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\r\n\r\nconst useIntersectionObserver = (options) => {\r\n  const [isIntersecting, setIntersecting] = useState(false);\r\n  const ref = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(([entry]) => {\r\n      setIntersecting(entry.isIntersecting);\r\n    }, options);\r\n\r\n    const currentRef = ref.current;\r\n    if (currentRef) {\r\n      observer.observe(currentRef);\r\n    }\r\n\r\n    return () => {\r\n      if (currentRef) {\r\n        observer.unobserve(currentRef);\r\n      }\r\n    };\r\n  }, [options]);\r\n\r\n  return [ref, isIntersecting];\r\n};\r\n\r\nexport default useIntersectionObserver;\r\n\r\n"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAEnD,KAAM,CAAAC,uBAAuB,CAAIC,OAAO,EAAK,CAC3C,KAAM,CAACC,cAAc,CAAEC,eAAe,CAAC,CAAGN,QAAQ,CAAC,KAAK,CAAC,CACzD,KAAM,CAAAO,GAAG,CAAGL,MAAM,CAAC,IAAI,CAAC,CAExBD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAO,QAAQ,CAAG,GAAI,CAAAC,oBAAoB,CAACC,IAAA,EAAa,IAAZ,CAACC,KAAK,CAAC,CAAAD,IAAA,CAChDJ,eAAe,CAACK,KAAK,CAACN,cAAc,CAAC,CACvC,CAAC,CAAED,OAAO,CAAC,CAEX,KAAM,CAAAQ,UAAU,CAAGL,GAAG,CAACM,OAAO,CAC9B,GAAID,UAAU,CAAE,CACdJ,QAAQ,CAACM,OAAO,CAACF,UAAU,CAAC,CAC9B,CAEA,MAAO,IAAM,CACX,GAAIA,UAAU,CAAE,CACdJ,QAAQ,CAACO,SAAS,CAACH,UAAU,CAAC,CAChC,CACF,CAAC,CACH,CAAC,CAAE,CAACR,OAAO,CAAC,CAAC,CAEb,MAAO,CAACG,GAAG,CAAEF,cAAc,CAAC,CAC9B,CAAC,CAED,cAAe,CAAAF,uBAAuB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}